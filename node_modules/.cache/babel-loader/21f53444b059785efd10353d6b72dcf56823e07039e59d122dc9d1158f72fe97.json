{"ast":null,"code":"export default {\n  name: \"login\",\n  data() {\n    return {\n      codeUrl: \"\",\n      //跟 model 进行数据的双向绑定\n      loginForm: {\n        //前面的字段是 el-from 表单中的 prop 属性\n        username: \"admin\",\n        password: \"admin123\",\n        rememberMe: false,\n        code: \"\",\n        uuid: \"\"\n      }\n    };\n  }\n};","map":{"version":3,"names":["name","data","codeUrl","loginForm","username","password","rememberMe","code","uuid"],"sources":["src/views/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <!-- : 冒号，都是代表获取的是动态的值，不是写死的-->\r\n    <!-- :model,实现表单数据的双向绑定。这样，在用户输入表单数据时，数据会自动更新到 formData 对象中，\r\n        而在程序中修改 formData 对象中的数据时，表单中的控件也会自动更新。-->\r\n    <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\">\r\n      <h3 class=\"title\">科技系统</h3>\r\n      <el-form-item prop=\"username\">\r\n          <!-- v-model 就是绑定值-->\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            type=\"text\"\r\n            placeholder=\"账户\"\r\n          >\r\n            <svg-icon slot=\"prefix\" icon-class=\"user\" class=\"el-input__icon input-icon\" />\r\n          </el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"loginForm.password\"\r\n          type=\"password\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"密码\"\r\n          @keyup.enter.native=\"handleLogin\"\r\n        >\r\n          <svg-icon slot=\"prefix\" icon-class=\"password\" class=\"el-input__icon input-icon\" />\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"code\" v-if=\"captchaEnabled\">\r\n        <el-input\r\n          v-model=\"loginForm.code\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"验证码\"\r\n          style=\"width: 63%\"\r\n          @keyup.enter.native=\"handleLogin\"\r\n        >\r\n          <svg-icon slot=\"prefix\" icon-class=\"validCode\" class=\"el-input__icon input-icon\" />\r\n        </el-input>\r\n        <div class=\"login-code\">\r\n          <!--这个 getCode 是点击验证码图片，进行切换的的方法-->\r\n          <img :src=\"codeUrl\" @click=\"getCode\" class=\"login-code-img\"/>\r\n        </div>\r\n      </el-form-item>\r\n      <el-checkbox v-model=\"loginForm.rememberMe\" style=\"margin:0px 0px 25px 0px;\">记住密码</el-checkbox>\r\n      <el-form-item style=\"width:100%;\">\r\n        <el-button\r\n          :loading=\"loading\"\r\n          size=\"medium\"\r\n          type=\"primary\"\r\n          style=\"width:100%;\"\r\n          @click.native.prevent=\"handleLogin\"\r\n        >\r\n          <span v-if=\"!loading\">登 录</span>\r\n          <span v-else>登 录 中...</span>\r\n        </el-button>\r\n        <div style=\"float: right;\" v-if=\"register\">\r\n          <router-link class=\"link-type\" :to=\"'/register'\">立即注册</router-link>\r\n        </div>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--  底部  -->\r\n    <div class=\"el-login-footer\">\r\n      <span>Copyright © 2018-2023 ruoyi.vip All Rights Reserved.</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"login\",\r\n  data() {\r\n    return {\r\n      codeUrl: \"\",\r\n      //跟 model 进行数据的双向绑定\r\n      loginForm: {\r\n        //前面的字段是 el-from 表单中的 prop 属性\r\n        username: \"admin\",\r\n        password: \"admin123\",\r\n        rememberMe: false,\r\n        code: \"\",\r\n        uuid: \"\"\r\n      },\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*这个修饰的是 class 名叫 login 的 div 块*/\r\n.login{\r\n  /*填充满整个页面*/\r\n  height: 100%;\r\n  background-image: url(\"../assets/images/login-background.jpg\");\r\n  /*图片显示，进行 填充*/\r\n  background-size: cover;\r\n  display: flex;\r\n  /*居中*/\r\n  justify-content: center;\r\n  /*居中*/\r\n  align-items: center;\r\n}\r\n\r\n.title {\r\n  margin: 0px auto 30px auto;\r\n  text-align: center;\r\n  color: #707070;\r\n}\r\n\r\n.login-form {\r\n  border-radius: 6px;\r\n  background: #ffffff;\r\n  width: 400px;\r\n  padding: 25px 25px 5px 25px;\r\n.el-input {\r\n  height: 38px;\r\ninput {\r\n  height: 38px;\r\n}\r\n}\r\n.input-icon {\r\n  height: 39px;\r\n  width: 14px;\r\n  margin-left: 2px;\r\n}\r\n}\r\n.login-tip {\r\n  font-size: 13px;\r\n  text-align: center;\r\n  color: #bfbfbf;\r\n}\r\n.login-code {\r\n  width: 33%;\r\n  height: 38px;\r\n  float: right;\r\nimg {\r\n  cursor: pointer;\r\n  vertical-align: middle;\r\n}\r\n}\r\n.el-login-footer {\r\n  height: 40px;\r\n  line-height: 40px;\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  font-family: Arial;\r\n  font-size: 12px;\r\n  letter-spacing: 1px;\r\n}\r\n.login-code-img {\r\n  height: 38px;\r\n}\r\n</style>\r\n"],"mappings":"AAoEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACA;MACAC,SAAA;QACA;QACAC,QAAA;QACAC,QAAA;QACAC,UAAA;QACAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}